{"ast":null,"code":"// Returns all nodes in the order in which they were visited. \n// Also makes nodes point back to their previous node, \n// allowing us to compute the shortest path by backtracking \n// from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  startNode.distance = 0;\n  const unvisitedNodes = [];\n}","map":{"version":3,"sources":["/Users/andreimihai/Documents/proiecteDiverse/proiecte/pathfinding-visualizer/src/Algorithms/Dijkstra.js"],"names":["dijkstra","grid","startNode","finishNode","distance","unvisitedNodes"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+C;AAClDD,EAAAA,SAAS,CAACE,QAAV,GAAqB,CAArB;AAEA,QAAMC,cAAc,GAAG,EAAvB;AACH","sourcesContent":["// Returns all nodes in the order in which they were visited. \n// Also makes nodes point back to their previous node, \n// allowing us to compute the shortest path by backtracking \n// from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n    startNode.distance = 0;\n\n    const unvisitedNodes = [];\n}\n"]},"metadata":{},"sourceType":"module"}