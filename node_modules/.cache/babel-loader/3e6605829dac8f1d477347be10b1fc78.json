{"ast":null,"code":"var _jsxFileName = \"/Users/andreimihai/Documents/proiecteDiverse/proiecte/pathfinding-visualizer/src/Components/PathfindingVisualizer.jsx\";\nimport React, { Component } from \"react\";\nimport TNode from \"./TNode\";\nimport \"../grid.css\";\nconst startX = 7;\nconst startY = 30;\nconst finishX = 25;\nconst finishY = 30;\nexport default class PathfindingVisualizer extends Component {\n  constructor() {\n    super();\n    this.setState = {\n      grid: []\n    };\n  }\n\n  componentDidMount() {\n    const grid = getGrid(); // this.setState({ grid });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, grid.map(row));\n  }\n\n}\n\nconst getGrid = () => {\n  const grid = [];\n\n  for (let i = 0; i < 30; i++) {\n    const currentRow = [];\n\n    for (let j = 0; j < 60; j++) {\n      currentRow.push(new TNode(i, j, i == 7 && j == 30 ? true : false, i == 25 && j == 30 ? true : false));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};","map":{"version":3,"sources":["/Users/andreimihai/Documents/proiecteDiverse/proiecte/pathfinding-visualizer/src/Components/PathfindingVisualizer.jsx"],"names":["React","Component","TNode","startX","startY","finishX","finishY","PathfindingVisualizer","constructor","setState","grid","componentDidMount","getGrid","render","map","row","i","currentRow","j","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AAEA,MAAMC,MAAM,GAAG,CAAf;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AAEA,eAAe,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAC3DO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,QAAL,GAAgB;AACdC,MAAAA,IAAI,EAAE;AADQ,KAAhB;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMD,IAAI,GAAGE,OAAO,EAApB,CADkB,CAElB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,IAAI,CAACI,GAAL,CAAUC,GAAV,CADH,CADA;AAID;;AAlB0D;;AAqB7D,MAAMH,OAAO,GAAG,MAAM;AACpB,QAAMF,IAAI,GAAG,EAAb;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAMC,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,UAAU,CAACE,IAAX,CACE,IAAIjB,KAAJ,CAAUc,CAAV,EAAaE,CAAb,EAAgBF,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,EAAf,GAAoB,IAApB,GAA2B,KAA3C,EACAF,CAAC,IAAI,EAAL,IAAWE,CAAC,IAAI,EAAhB,GAAqB,IAArB,GAA4B,KAD5B,CADF;AAID;;AACDR,IAAAA,IAAI,CAACS,IAAL,CAAUF,UAAV;AACD;;AAED,SAAOP,IAAP;AACD,CAfD","sourcesContent":["import React, { Component } from \"react\";\nimport TNode from \"./TNode\";\nimport \"../grid.css\";\n\nconst startX = 7;\nconst startY = 30;\nconst finishX = 25;\nconst finishY = 30;\n\nexport default class PathfindingVisualizer extends Component {\n  constructor() {\n    super();\n    this.setState = {\n      grid: [],\n    };\n  }\n\n  componentDidMount() {\n    const grid = getGrid();\n    // this.setState({ grid });\n  }\n\n  render() {\n    return (\n    <div className=\"grid\">\n      {grid.map((row))}\n    </div>);\n  }\n}\n\nconst getGrid = () => {\n  const grid = [];\n\n  for (let i = 0; i < 30; i++) {\n    const currentRow = [];\n    for (let j = 0; j < 60; j++) {\n      currentRow.push(\n        new TNode(i, j, i == 7 && j == 30 ? true : false,\n        i == 25 && j == 30 ? true : false)\n      );\n    }\n    grid.push(currentRow);\n  }\n\n  return grid;\n};"]},"metadata":{},"sourceType":"module"}