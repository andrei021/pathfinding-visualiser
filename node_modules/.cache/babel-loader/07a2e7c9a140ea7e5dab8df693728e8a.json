{"ast":null,"code":"// Returns all nodes in the order in which they were visited. \n// Also makes nodes point back to their previous node, \n// allowing us to compute the shortest path by backtracking \n// from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  startNode.distance = 0;\n  const visitedNodesInOrder = [];\n  const unvisitedNodes = getNodes(grid);\n}\n\nfunction getNodes(grid) {\n  u;\n\n  for (let currentRow = 0; currentRow < grid.length; currentRow++) {}\n}","map":{"version":3,"sources":["/Users/andreimihai/Documents/proiecteDiverse/proiecte/pathfinding-visualizer/src/Algorithms/Dijkstra.js"],"names":["dijkstra","grid","startNode","finishNode","distance","visitedNodesInOrder","unvisitedNodes","getNodes","u","currentRow","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+C;AAClDD,EAAAA,SAAS,CAACE,QAAV,GAAqB,CAArB;AACA,QAAMC,mBAAmB,GAAG,EAA5B;AACA,QAAMC,cAAc,GAAGC,QAAQ,CAACN,IAAD,CAA/B;AACH;;AAED,SAASM,QAAT,CAAkBN,IAAlB,EAAwB;AACpBO,EAAAA,CAAC;;AACD,OAAI,IAAIC,UAAU,GAAG,CAArB,EAAwBA,UAAU,GAAGR,IAAI,CAACS,MAA1C,EAAkDD,UAAU,EAA5D,EAAgE,CAE/D;AACJ","sourcesContent":["// Returns all nodes in the order in which they were visited. \n// Also makes nodes point back to their previous node, \n// allowing us to compute the shortest path by backtracking \n// from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n    startNode.distance = 0;\n    const visitedNodesInOrder = [];\n    const unvisitedNodes = getNodes(grid);\n}\n\nfunction getNodes(grid) {\n    u\n    for(let currentRow = 0; currentRow < grid.length; currentRow++) {\n\n    }\n} \n"]},"metadata":{},"sourceType":"module"}